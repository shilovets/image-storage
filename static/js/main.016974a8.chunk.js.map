{"version":3,"sources":["components/header/header.js","components/spinner/spinner.js","components/error-indicator/error-indicator.js","components/api/API.js","components/images-list/images-list.js","components/add-images/add-images.js","components/app/App.js","index.js"],"names":["Header","className","to","Spinner","ErrorIndicator","API","apiURL","ImagesList","state","images","loading","error","onDelete","id","removableImage","imageId","setState","axios","post","then","res","getImages","catch","err","console","log","this","url","get","data","map","index","name","key","src","alt","onClick","type","Component","AddImages","formControl","imageName","value","errorMessage","valid","touched","validation","required","maxLength","toggleAlert","uploading","handlerSubmit","event","preventDefault","image","handlerChangeData","Promise","resolve","reject","reader","FileReader","file","target","files","readAsDataURL","onload","result","onerror","alert","role","onSubmit","aria-describedby","accept","onChange","App","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.016974a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header d-flex align-items-center'>\r\n            <h1>\r\n                <Link to='/'>IMAGE-STORAGE</Link>\r\n                <span>test</span>\r\n            </h1>\r\n            <ul className='d-flex align-items-center'>\r\n                <li>\r\n                    <Link to='/imagesList'>Images List</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/addImage'>Add Images</Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-rkpf3jscdd\">\r\n            <div className=\"ldio-8as5nqhmm4u\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from \"react\";\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className='error-indicator d-flex flex-column align-items-center'>\r\n            <h2>Oops</h2>\r\n            <h1>Coronavirus is here</h1>\r\n            <h3>We've already sent out antibodies to fight the enemy</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","\r\n\r\nclass API {\r\n    //static apiURL = \"http://127.0.0.1:8080\";\r\n    static apiURL = \"https://images-storage-server.herokuapp.com/\";\r\n}\r\n\r\nexport default API","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport './images-list.css';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\nimport API from \"../api/API\"\r\n\r\nclass ImagesList extends Component {\r\n    state = {\r\n        images: [],\r\n        loading: true,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getImages();\r\n    };\r\n\r\n    onDelete = (id) => {\r\n        const removableImage = {\r\n            imageId: id\r\n        };\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        axios.post(API.apiURL + \"/Image/Remove\", removableImage)\r\n            .then(res => {\r\n                this.getImages();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    getImages() {\r\n        //const url = \"https://gooly-backend.herokuapp.com/Images\";\r\n        const url = API.apiURL + \"/Images\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.setState({\r\n                    images: res.data.images,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    loading: false,\r\n                    error: true\r\n                })\r\n            });\r\n    };\r\n\r\n    render() {\r\n        let images = this.state.images;\r\n\r\n        if (this.state.error) {\r\n            return <ErrorIndicator/>\r\n        }\r\n\r\n        return (\r\n            <div className='images-list d-flex flex-column align-items-center'>\r\n                <div className='images-list__title'>\r\n                    <h2>Images</h2>\r\n                </div>\r\n\r\n                {\r\n                    this.state.loading\r\n                        ? <Spinner/>\r\n                        : <div className='images-list__table'>\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Data</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    images.map(({name, data, id}, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{name}</td>\r\n                                                <td><img src={data} alt='kek'/></td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        onClick={() => this.onDelete(id)}\r\n                                                        type='submit'\r\n                                                        className=\"btn btn-outline-danger btn-sm \">\r\n                                                        <i className=\"fa fa-trash-o\"/>\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ImagesList;","import React, {Component, Fragment} from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport './add-images.css';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport API from \"../api/API\"\r\n\r\nclass AddImages extends Component {\r\n\r\n    state = {\r\n        formControl: {\r\n            imageName: {\r\n                value: '',\r\n                type: 'text',\r\n                errorMessage: 'Допустимая длина картинки от 1 до 30 символов',\r\n                valid: true,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 30\r\n                }\r\n            }\r\n        },\r\n        toggleAlert: null,\r\n        uploading: false,\r\n        name: '',\r\n        data: ''\r\n\r\n    };\r\n\r\n    handlerSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            uploading: true\r\n        });\r\n\r\n        const image = {\r\n            name: this.state.name,\r\n            data: this.state.data\r\n        };\r\n        axios.post(API.apiURL + \"/Image/Send/Test\", image)\r\n            .then(res => {\r\n                this.setState({\r\n                    uploading: false,\r\n                    toggleAlert: true,\r\n                    data: ''\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    uploading: false,\r\n                    toggleAlert: false\r\n                });\r\n            });\r\n\r\n    };\r\n\r\n    handlerChangeData = event => new Promise((resolve, reject) => {\r\n        this.setState({\r\n            toggleAlert: null\r\n        });\r\n\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            this.setState({\r\n                name: file.name,\r\n                data: reader.result\r\n            });\r\n        };\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n// handlerChangeName = event => {\r\n//     let formControl = {...this.state.formControl};\r\n//     const control = {...formControl['imageName']};\r\n//\r\n//     control.value = event.target.value;\r\n//     control.touched = true;\r\n//     control.valid = this.validateControl(control.value, control.validation);\r\n//\r\n//     formControl['imageName'] = control;\r\n//\r\n//     this.setState({\r\n//         formControl\r\n//     });\r\n//\r\n//     console.log(this.state.formControl)\r\n//\r\n// };\r\n\r\n// validateControl(value, validation) {\r\n//     let isValid = true;\r\n//\r\n//     if (!validation) {\r\n//         return true;\r\n//     }\r\n//\r\n//     if (validation.required) {\r\n//         isValid = value.trim() !== '' && isValid;\r\n//     }\r\n//\r\n//     if (validation.maxLength) {\r\n//         isValid = value.length <= validation.maxLength && isValid;\r\n//     }\r\n//\r\n//\r\n//     return isValid;\r\n// }\r\n\r\n    render() {\r\n        let alert = null;\r\n\r\n        if (this.state.toggleAlert) {\r\n            alert = (\r\n                <div className=\"alert  alert-success\">\r\n                    {/*<button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>*/}\r\n                    <p><strong>Well done!</strong> You successfully uploaded the image.</p>\r\n                </div>\r\n            );\r\n        } else if (!!this.state.toggleAlert) {\r\n            alert = (\r\n                <div className=\"alert alert-danger\" role='alert'>\r\n                    {/*<button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>*/}\r\n                    <p><strong>Oh snap!</strong> The image didn't upload</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                {alert}\r\n\r\n                <form className='add-images' onSubmit={this.handlerSubmit}>\r\n\r\n                    {\r\n                        !this.state.uploading\r\n                            ? <fieldset>\r\n                                <legend>Add image</legend>\r\n                                <div className=\"form-group\">\r\n\r\n                                    {/*<input*/}\r\n                                    {/*type={this.state.formControl.imageName.type}*/}\r\n                                    {/*value={this.state.formControl.imageName.value}*/}\r\n                                    {/*className=\"form-control\"*/}\r\n                                    {/*placeholder=\"Enter name\"*/}\r\n                                    {/*onChange={this.handlerChangeName}*/}\r\n                                    {/*/>*/}\r\n                                    {/*{!this.state.formControl.imageName.valid*/}\r\n                                    {/*? <small>{this.state.formControl.imageName.errorMessage}</small>*/}\r\n                                    {/*: null*/}\r\n                                    {/*}*/}\r\n\r\n                                    <input type=\"file\" className=\"form-control-file\" id=\"exampleInputFile\"\r\n                                           aria-describedby=\"fileHelp\" accept=\"image/*\"\r\n                                           onChange={this.handlerChangeData}\r\n                                    />\r\n\r\n                                    {this.state.data !== ''\r\n                                        ? <img src={this.state.data} className='added-image' alt='kek'/>\r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </fieldset>\r\n                            : <Spinner/>\r\n                    }\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddImages;\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Header from \"../header/header\";\r\nimport ImagesList from \"../images-list/images-list\";\r\nimport AddImages from \"../add-images/add-images\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='jumbotron'>\r\n                <Header/>\r\n\r\n                <Switch>\r\n                    <Route path='/' exact render={() => <h2 className='hello-text'>Welcome to the images storage</h2>}/>\r\n                    <Route path='/imagesList' component={ImagesList}/>\r\n                    <Route path='/addImage' component={AddImages}/>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport App from './components/app/App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}